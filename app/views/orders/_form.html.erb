<%= form_with(model: order, id: "new-order",  local: true) do |form| %>
    <% if order.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(order.errors.count, "error") %> prohibited this order from being saved:</h2>

      <ul>
        <% order.errors.full_messages.each do |message| %>
          <li><%= message %></li>
            <% end %>
          </ul>
    </div>

    <% end %>

    <%= form.label _("Select Client") %>   
    
    <%= form.select :client_id, ([['+ Create New Client', '-1']] + Client.all.map{ |c| [c.name, c.id] }), {:prompt => 'Choose a client'}, :class => "form-control col-8 col-lg-6 col-xl-3 client-select" %>

    <div style="display: none;" class="container col-6 mt-3" id="new_client">
      <%= form.fields_for :client, Client.new do |client_attributes|%>
      <div class="row">
        <div class="col-6">
          <%= client_attributes.label :name, "Client Name:" %>
          <%= client_attributes.text_field :name, class: "form-control" %>
        </div>
        <div class="col">
          <%= client_attributes.label :phone, "Phone:" %>
          <%= client_attributes.text_field :phone, class: "form-control" %>
        </div>
      </div>
      <div class="row">
        <div class="col-6">
          <%= client_attributes.label :address, "Address:" %>
          <%= client_attributes.text_field :address, class: "form-control" %>
        </div>
        <div class="col">
          <%= client_attributes.label :city, "City:" %>
          <%= client_attributes.text_field :city, class: "form-control" %>
      </div>
      <% end %>
    </div>
  </div>

<hr>
      <h2><%= _('Products') %></h2>

    <%= form.fields_for :order_products do |builder| %>
      <%= render 'order_product_fields', form: builder %>
    <% end %>
 
      <%= link_to_add_fields _("Add Product"), form, :order_products %><br><br><hr>
      
  <div class="field">
    <%= form.label "order_discount (amount in som)" %>
    <%= form.number_field :order_discount, :class => "order-discount form-control" %>
  </div>

  <div class="field">
    <%= form.label :grand_total %>
    <%= form.text_field :grand_total, :class => "grand-total greyed_out form-control", :readonly => true %>
  </div>

  <div> 
    <%= form.submit "#{order.id.nil? ? _("Create Order") : _("Update Order")}" , :class => "btn btn-success" %>
  </div>

<% end %>

<script type="text/javascript">

  $(document).ready(function() {  

    $(document).on('change', '.client-select', displayNewClientForm);
    $(document).on('change', '.product-select', updateSelectedPrice);
    $(document).on('change', '.quantity, .sale-price, .product-select, .item-discount', calcSubtotal);
    $(document).on('change', '.quantity, .sale-price, .product-select, .item-discount, .order-discount', calcGrandTotal); 
    $(document).on('click', '.remove_fields', calcGrandTotal);
    $(document).on('load', '.sale-price, .subtotal, .grand-total', setDecimals);


    function setDecimals(){
     this.value = parseFloat(this.value).toFixed(2);
    }


    function displayNewClientForm(){
      var client = $(".client-select").val()
      var new_client = "-1"
      if (client == new_client) {
      $("#new_client").css('display', 'inline-block');
      } else {
        $("#new_client").css('display', 'none');
      }
    }

    function updateSelectedPrice(){
      var current_picker = $(this);
        $.ajax({ 
          url: "<%= products_get_price_path %>",
          data: { product_id: $(this).val() },
          type: "GET",
          success: function(data) {
            current_picker.parents(".nested-fields").find('.sale-price').val(data["price"]);
          }
        });
    }

    function calcGrandTotal() {
        var grandTotal = 0
        var orderDiscount = $(".order-discount").val()
          $(".subtotal").each(function() {
            if ( $(this).parents(".nested-fields").is(':visible') ) {
              grandTotal += parseFloat($(this).val());
            } 
            $(".grand-total").val((grandTotal - orderDiscount).toFixed(2));
          });
    };   
      
    function calcSubtotal() {
      var qt = $(this).parents(".nested-fields").find(".quantity").val();
      var price = $(this).parents(".nested-fields").find(".sale-price").val();
      var item_discount = $(this).parents(".nested-fields").find(".item-discount").val();
      var subtotal = (price - item_discount || 0) * (qt || 0);
      $(this).parents(".nested-fields").find(".subtotal").val(subtotal.toFixed(2))
    };

  });  
  
</script>
