<%= form_with(model: purchase, id: "new_purchase", class: "purchase-order-form",  local: true) do |form| %>
  <% if purchase.errors.any? %>
  <div id="error_explanation">
    <h2><%= pluralize(order.errors.count, "error") %> prohibited this order from being saved:</h2>

    <ul>
    <% order.errors.full_messages.each do |message| %>
      <li><%= message %></li>
    <% end %>
    </ul>
  </div>
<% end %>


    <%= form.label _("Select supplier") %>
      <%= form.collection_select :supplier_id, Supplier.all, :id, :supplier_name, {}, { :class => 'form-control w-auto' } %>
    <br><br>

    <h2><%= _('Products') %></h2><hr>

        <%= form.fields_for :purchase_products do |builder| %>
          <%= render 'purchase_product_fields', form: builder %>
        <% end %>      

        <div class="pad-bottom"> 
            <%= link_to_add_fields _("Add Product"), form, :purchase_products %>
        </div>

        <div class="field">
          <%= form.label :estimated_total %>
          <%= form.text_field :estimated_total, id: "estimated_total", class: "estimated-total greyed_out form-control", :readonly => true %>
        </div>
       
        <div class="field">
          <%= form.label :purchase_total %>
          <%= form.text_field :purchase_total, id: "actual_total", class: "actual-total greyed_out form-control", :readonly => true %>
        </div>

        <div class="field">
        <label for="date_ordered"><%= _('Ordered on') %></label>
        <input type="text" class="datepicker form-control" id="date_ordered" name="purchase[date_ordered]" 
              autocomplete = 'off' value = "<%= purchase.date_ordered.strftime("%m-%d-%Y") unless purchase.date_ordered.blank? %>"></div>

        <div class="field">      
        <label for="date_expected"><%= _('Expected Arrival') %></label>
        <input type="text" class="datepicker form-control" id="date_expected" name="purchase[date_expected]" 
              autocomplete = 'off' value = "<%= purchase.date_expected.strftime("%m-%d-%Y") unless purchase.date_expected.blank? %>"></div>

        <div class="field">
        <label for="date_received"><%= _('Received on') %></label>
        <input type="text" class="datepicker form-control" id="date_received" name="purchase[date_received]" 
              autocomplete = 'off' value = "<%= purchase.date_received.strftime("%m-%d-%Y") unless purchase.date_received.blank? %>"></div>


  <div> 
    <%= form.submit _("Create Purchase"), :class => 'btn btn-success'%>
  </div>
<br><br>
  
<% end %>


<script type="text/javascript">

//////////////////  SUBTOTAL AUTO-CALC  /////////////////////

        $(document).on('change', '.est_cost, .est_qt', function() {
            var estTotal = 0
              $(".estimated_subtotal").each(function() {
                  estTotal += parseFloat($(this).val());
              $("#estimated_total").val(estTotal);
          });
        });      
    
        $(document.body).on("change", ".est_cost, .est_qt", function() {

              var estimatedCost = parseFloat($(this).parents(".nested-fields").find(".est_cost").val());
              var estimatedQt = parseFloat($(this).parents(".nested-fields").find(".est_qt").val());
              var estimatedSubtotal = (estimatedQt || 0) * (estimatedCost || 0);

              $(this).parents(".nested-fields").find(".estimated_subtotal").val(estimatedSubtotal);                

        });

        $(document).on('change', '.act_cost, .act_qt', function() {
                    var actTotal = 0
                      $(".actual_subtotal").each(function() {
                          actTotal += parseFloat($(this).val());
                      $("#actual_total").val(actTotal);
                  });
                });   
      
        $(document.body).on("change", ".act_cost, .act_qt", function() {
          var actualQt = $(this).parents(".nested-fields").find(".act_qt").val();
          var actualCost = $(this).parents(".nested-fields").find(".act_cost").val();
          var actualSubtotal = (actualQt || 0) * (actualCost || 0);
          $(this).parents(".nested-fields").find(".actual_subtotal").val(actualSubtotal)
        });

        

//////////////////  DATE PICKER  ///////////////////// 

$(function() {
      var dateFormat = "mm/dd/yy",
      //first time picker//
            ordered = $( "#date_ordered" ).datepicker({
              changeMonth: true, 
              numberOfMonths: 1})
            .on( "change", function() {
            ordered.datepicker( "option", getDate( this ) );
          }),

      //second date picker

            expected = $( "#date_expected" ).datepicker({
              changeMonth: true,
              numberOfMonths: 1
            })
            .on( "change", function() {
              expected.datepicker( "option", getDate( this ) );
            });

      //third date picker

            received = $( "#date_received" ).datepicker({
                changeMonth: true,
                numberOfMonths: 1
              })
              .on( "change", function() {
                received.datepicker( "option", getDate( this ) );
              });
  
      function getDate( element ) {
        var date;
        try {
          date = $.datepicker.parseDate( dateFormat, element.value );
        } catch( error ) {
          //date = null;
        }
  
        return date;
      }
  });




</script>


