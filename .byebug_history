exit
quick_sort
right_index
left_index
j
array
exit
j+1
j-1
j
left_index
array
arary
exit
right_index
left_index
left_inde
array
j
exit
swap(array, left, array.length - 1)
array
pivot_index
left
exit
left
pivot_index
c
array[left]
array[right]
pivot_index
swap(array, left, array.length - 1)
array
swap(array, left, right)
right
left
exit
right_index
array.length
array
right
left
left_index
right_index
c
array.length
array
right_index
left_index
exit 
j-1
j
right_index
left_index
array
exit
exit 
exit
array
left_index
right_index
c
j - 1
j-1
right_index
left_index
j
exit
right_index
left_index
c
j
right_index
left_index
array
arraty
j
exit 
array
right
left
pivot_value
exit
array.length 
array[array.length - 1]
right
left
array
pivot_value
exit 
array
right_index
exit 
array
right_index
left_index
exit
array.length
array
right_index
exit
right_index
exit 
array
right_index
left_index
exit
pivot_index
j
right_index
left_index
array
j
exit
j
i
exit
left_arr
right_arr
left_arr
left_array
combined_array
exit
combined_array
right_arr
right_arr[ri]
left_arr[li]
left_arr
exit
right_arr.length
left_arr.length
combined_array
right[ri]
left[li]
right_arr
left_arr
exit
right_arr[ri]
left_arr[li]
right_arr
left_arr
exit
left_arr
c
left_arr
li
exit
sorted_arr
right_array
left_array
exit
right_array
left_array
sorted_arr
exit
array
merge_sort(left_array)
left_array
right_array
sorted_arr
exit
right_array
left_array
splitted_array
exit
splitted_array
exit
left_array
right_array
splitted_array
exit
left_array
right_array
splitted_array
exit
left_array
left_rray
right_array
splitted_array
exit
right_array
left_array
right_array
splitted_array
exit
right_arrat
arrat
right_arrat
left_array
splitted_array
exit
splitted_array
right_array
left_array
exit
left_sum
right_sum
array
exit
dep[:values]
dep[:depth]
dep
deepest_val[:values]
deepest_val
exit
hash_to_sort
sorted_keys
c
h
hh
exit
c
C
c
hh.keys
hh.values
value
key
c
o
c
o
c
o
c
o
c
o
c
!o.valid?
o.valid?
c
o.valid?
o
c
o
c
o
c
o
c
o.order_products.first.errors.full_messages
o
c
o.order_products.first.errors.full_messages
o.save
o.order_products.push OrderProduct.new(product_id: muffins.id, quantity: 10, subtotal: 500, sale_price: 50)
o = Order.new
o.save
o.order_products
o
c
OrderProduct.build
o
c
o.order_products.first.errors.full_messages
