exit
right_sorted_array
left_sorted_array
arr
exit
arr
c
split_arr
arr
right
left
c
right
left
split_arr
arr
c
arr
split_arr
c
split_arr
piv
right
left
arr
c
arr
exit
split_arr
arr
c
split_arr
arr
left
right
c
right
arr
c
exit
piv
left
right
split_arr
arr
c
split_arr
arr
left
right
c
left
right
split_arr
arr
c
arr
piv
left
right
c
right
left
arr
c
piv
right
left
arr
c
arr
piv
right
left
exit
arr
right
piv
left
arr
split_arr
arr
c
arr
c
arr
c
arr
arr[piv]
piv
right
left
arr
c
arr
arr[right]
arr[left]
arr[right], arr[left] = arr[left], arr[right]
arr[right]
arr[left]
arr
c
piv
left
right
arr
c
arr[piv]
piv
left
right
arr
exit
piv
arr
left
right
arr
right_branch
exit
arr
left_branch
arr
split_arr
exit
arr
c
cccc
c
piv
left
right
c
arr[piv]
arr
piv
left
right
c
arr
exit
arr[piv]
arr[left]
arr[right]
piv
left
right
c
right
piv
left
arr
exit
arr
arr[piv]
piv
exit
arr[right]
right
arr.length
piv
right
left
lef
exit
piv
pivot
right
left
exit
l
r
l
piv
l
exit
arr
c
arr
split_arr
c
split_arr
c
split_arr
arr
c
arr
split_arr
c
arr
split_arr
exit
c
left_sorted_array
arr
cc
c
cc
c
j
x
right_sorted_array
left_sorted_array
arr
c
 x <= left_sorted_array.length - 1
j
x
right_sorted_array
left_sorted_array
c
sorted_array
sorted_arr
arr
j
x
exit
j
x
exit
i
j
i
exit
left_sorted_array[j]
left_sorted_array
c
arr
sorted_array
right_sorted_array
left_sorted_array
exit
exi
base_arrs
arr
split_arr
c
split_arr
split_arr[1]
base_arrs
arr
c
base_arrs
arr
c
base_arrs
arr
exit
split_arr[0]
split_arr
arr
c
arr
base_arrs
c
arr
